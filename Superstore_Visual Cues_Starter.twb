<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0805.0415                               -->
<workbook original-version='18.1' source-build='2023.2.1 (20232.23.0805.0415)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='Orders (Superstore_raw)' inline='true' name='federated.0ilxnl71d7yepk1fkcrtv19ki788' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Superstore_raw' name='excel-direct.1msv3zd0b25lxz1617h4n1frpelf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/javen/OneDrive - Temasek Polytechnic/Desktop/A-SCHOOL-2023/story/labbbb/DV_Superstore_Tidy.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1msv3zd0b25lxz1617h4n1frpelf' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:W9994:no:A1:W9994:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='integer' name='Postal Code' ordinal='10' />
            <column datatype='string' name='Product ID' ordinal='11' />
            <column datatype='string' name='Category' ordinal='12' />
            <column datatype='string' name='Sub-Category' ordinal='13' />
            <column datatype='string' name='Product Name' ordinal='14' />
            <column datatype='real' name='Sales' ordinal='15' />
            <column datatype='integer' name='Quantity' ordinal='16' />
            <column datatype='real' name='Discount' ordinal='17' />
            <column datatype='real' name='Cost' ordinal='18' />
            <column datatype='string' name='Region' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
            <column datatype='string' name='State' ordinal='21' />
            <column datatype='integer' name='Ship_Dur' ordinal='22' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1msv3zd0b25lxz1617h4n1frpelf' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:W9994:no:A1:W9994:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='integer' name='Postal Code' ordinal='10' />
            <column datatype='string' name='Product ID' ordinal='11' />
            <column datatype='string' name='Category' ordinal='12' />
            <column datatype='string' name='Sub-Category' ordinal='13' />
            <column datatype='string' name='Product Name' ordinal='14' />
            <column datatype='real' name='Sales' ordinal='15' />
            <column datatype='integer' name='Quantity' ordinal='16' />
            <column datatype='real' name='Discount' ordinal='17' />
            <column datatype='real' name='Cost' ordinal='18' />
            <column datatype='string' name='Region' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
            <column datatype='string' name='State' ordinal='21' />
            <column datatype='integer' name='Ship_Dur' ordinal='22' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>5</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:W9994:no:A1:W9994:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1934296B4D7B448793ED4AD0BA1D560F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1934296B4D7B448793ED4AD0BA1D560F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1934296B4D7B448793ED4AD0BA1D560F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1934296B4D7B448793ED4AD0BA1D560F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1934296B4D7B448793ED4AD0BA1D560F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1934296B4D7B448793ED4AD0BA1D560F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1934296B4D7B448793ED4AD0BA1D560F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1934296B4D7B448793ED4AD0BA1D560F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1934296B4D7B448793ED4AD0BA1D560F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1934296B4D7B448793ED4AD0BA1D560F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1934296B4D7B448793ED4AD0BA1D560F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1934296B4D7B448793ED4AD0BA1D560F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1934296B4D7B448793ED4AD0BA1D560F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1934296B4D7B448793ED4AD0BA1D560F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1934296B4D7B448793ED4AD0BA1D560F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1934296B4D7B448793ED4AD0BA1D560F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1934296B4D7B448793ED4AD0BA1D560F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1934296B4D7B448793ED4AD0BA1D560F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Cost</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1934296B4D7B448793ED4AD0BA1D560F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1934296B4D7B448793ED4AD0BA1D560F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1934296B4D7B448793ED4AD0BA1D560F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1934296B4D7B448793ED4AD0BA1D560F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship_Dur</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ship_Dur]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship_Dur</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1934296B4D7B448793ED4AD0BA1D560F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Category (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Category]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Technology&quot;'>
            <value>&quot;Technology&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Category (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Category]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Furniture&quot;'>
            <value>&quot;Furniture&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Category (group) 3]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Category]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Furniture&quot;'>
            <value>&quot;Furniture&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Category (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Category]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Office Supplies &amp; Technology&quot;'>
            <value>&quot;Office Supplies&quot;</value>
            <value>&quot;Technology&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;First Class&quot;' value='FC' />
          <alias key='&quot;Same Day&quot;' value='SD' />
          <alias key='&quot;Second Class&quot;' value='SC' />
          <alias key='&quot;Standard Class&quot;' value='ST' />
        </aliases>
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Bookcases, Supplies, Tables&quot;'>
            <value>&quot;Bookcases&quot;</value>
            <value>&quot;Supplies&quot;</value>
            <value>&quot;Tables&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sub-Category (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Bookcases, Chairs, Furnishings and 1 more&quot;'>
            <value>&quot;Bookcases&quot;</value>
            <value>&quot;Chairs&quot;</value>
            <value>&quot;Furnishings&quot;</value>
            <value>&quot;Tables&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sub-Category (group) 3]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Copiers&quot;'>
            <value>&quot;Copiers&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sub-Category (group) 4]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Copiers&quot;'>
            <value>&quot;Copiers&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Tables&quot;'>
            <value>&quot;Tables&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sub-Category (group) 5]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Machines &amp; Tables&quot;'>
            <value>&quot;Machines&quot;</value>
            <value>&quot;Tables&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sub-Category (group) 6]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Bookcases, Machines, Tables&quot;'>
            <value>&quot;Bookcases&quot;</value>
            <value>&quot;Machines&quot;</value>
            <value>&quot;Tables&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Copiers&quot;'>
            <value>&quot;Copiers&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Tables&quot;'>
            <value>&quot;Tables&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_1934296B4D7B448793ED4AD0BA1D560F]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Orders_1934296B4D7B448793ED4AD0BA1D560F]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_1934296B4D7B448793ED4AD0BA1D560F:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[cum:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Discount]' derivation='Sum' name='[pcdf:sum:Discount:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='RowInPane' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Discount]' derivation='Sum' name='[pcdf:sum:Discount:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Category,YEAR(Order Date),Sub-Category (group) 5,Sub-Category)' hidden='true' name='[Action (Category,YEAR(Order Date),Sub-Category (group) 5,Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[Sub-Category (group) 5]' />
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Sub-Category (group) 2,Sub-Category)' hidden='true' name='[Action (Sub-Category (group) 2,Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sub-Category (group) 2]' />
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <group caption='Action (Sub-Category)' hidden='true' name='[Action (Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),Sub-Category (group) 2,Sub-Category)' hidden='true' name='[Action (YEAR(Order Date),Sub-Category (group) 2,Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[Sub-Category (group) 2]' />
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),Sub-Category (group),Sub-Category) 1' hidden='true' name='[Action (YEAR(Order Date),Sub-Category (group),Sub-Category) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tyr:Order Date:ok]' />
          <groupfilter function='level-members' level='[Sub-Category (group)]' />
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),Sub-Category (group),Sub-Category)' hidden='true' name='[Action (YEAR(Order Date),Sub-Category (group),Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[Sub-Category (group)]' />
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Sub-Category (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Accessories &amp; Copiers&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ilxnl71d7yepk1fkcrtv19ki788]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ilxnl71d7yepk1fkcrtv19ki788].[pcto:sum:Sales:qk:3]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ilxnl71d7yepk1fkcrtv19ki788].[pcto:sum:Profit:qk:3]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Quantity:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0ilxnl71d7yepk1fkcrtv19ki788].[pcdf:sum:Discount:qk:2]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0ilxnl71d7yepk1fkcrtv19ki788].[pcdf:sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0ilxnl71d7yepk1fkcrtv19ki788].[pcto:sum:Sales:qk:4]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0ilxnl71d7yepk1fkcrtv19ki788].[avg:Profit:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Category:nk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ilxnl71d7yepk1fkcrtv19ki788].[pcto:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0ilxnl71d7yepk1fkcrtv19ki788].[cum:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0ilxnl71d7yepk1fkcrtv19ki788].[pcto:sum:Profit:qk:4]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ilxnl71d7yepk1fkcrtv19ki788].[pcto:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0ilxnl71d7yepk1fkcrtv19ki788].[__tableau_internal_object_id__].[cnt:Orders_1934296B4D7B448793ED4AD0BA1D560F:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Sub-Category (group) 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories, Copiers, Phones&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bookcases, Supplies, Tables&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Category (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Office Supplies &amp; Technology&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Sub-Category (group) 3]' type='palette'>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Sub-Category (group) 4]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Technology&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[Sub-Category (group) 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bookcases, Chairs, Furnishings and 1 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Category (group) 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Sub-Category (group) 6]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bookcases, Machines, Tables&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Category (group) 3]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_1934296B4D7B448793ED4AD0BA1D560F'>
            <properties context=''>
              <relation connection='excel-direct.1msv3zd0b25lxz1617h4n1frpelf' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:W9994:no:A1:W9994:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='integer' name='Postal Code' ordinal='10' />
                  <column datatype='string' name='Product ID' ordinal='11' />
                  <column datatype='string' name='Category' ordinal='12' />
                  <column datatype='string' name='Sub-Category' ordinal='13' />
                  <column datatype='string' name='Product Name' ordinal='14' />
                  <column datatype='real' name='Sales' ordinal='15' />
                  <column datatype='integer' name='Quantity' ordinal='16' />
                  <column datatype='real' name='Discount' ordinal='17' />
                  <column datatype='real' name='Cost' ordinal='18' />
                  <column datatype='string' name='Region' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                  <column datatype='string' name='State' ordinal='21' />
                  <column datatype='integer' name='Ship_Dur' ordinal='22' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_1B0E707AF1DF414FA45918BCC53DF9BF]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Pie (After)' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_2ACB08D8E33841DEA116B159F9ECD338]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 7' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Pie (After)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_raw)' name='federated.0ilxnl71d7yepk1fkcrtv19ki788' />
          </datasources>
          <datasource-dependencies datasource='federated.0ilxnl71d7yepk1fkcrtv19ki788'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category (group) 5]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Machines &amp; Tables&quot;'>
                  <value>&quot;Machines&quot;</value>
                  <value>&quot;Tables&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action2_2ACB08D8E33841DEA116B159F9ECD338]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]' shelf='rows'>
              <sort-filter-info>
                <sort-filter level-name='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[yr:Order Date:ok]' member-value='2014' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]' value='140' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Sub-Category (group) 5]' />
              <lod column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]</rows>
        <cols>([federated.0ilxnl71d7yepk1fkcrtv19ki788].[yr:Order Date:ok] * [federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk])</cols>
      </table>
      <simple-id uuid='{95B1EBDD-27E5-4DF9-BF66-A91BDCD8AFE4}' />
    </worksheet>
    <worksheet name='Pie (Before)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_raw)' name='federated.0ilxnl71d7yepk1fkcrtv19ki788' />
          </datasources>
          <datasource-dependencies datasource='federated.0ilxnl71d7yepk1fkcrtv19ki788'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <computed-sort column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]' direction='DESC' using='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]' />
              <size column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]' />
              <wedge-size column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]' />
              <text column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{1FD399AA-8B58-4F2D-AED7-7011A9EF3EE8}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_raw)' name='federated.0ilxnl71d7yepk1fkcrtv19ki788' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ilxnl71d7yepk1fkcrtv19ki788'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category (group) 5]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Machines &amp; Tables&quot;'>
                  <value>&quot;Machines&quot;</value>
                  <value>&quot;Tables&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (Category,YEAR(Order Date),Sub-Category (group) 5,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_1B0E707AF1DF414FA45918BCC53DF9BF]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='level-members' level='[Sub-Category (group) 5]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (Category,YEAR(Order Date),Sub-Category (group) 5,Sub-Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]' />
              <lod column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:State:nk]' />
              <geometry column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Latitude (generated)]</rows>
        <cols>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{63B30451-B750-4FF8-86E7-6235372F77DC}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_raw)' name='federated.0ilxnl71d7yepk1fkcrtv19ki788' />
          </datasources>
          <datasource-dependencies datasource='federated.0ilxnl71d7yepk1fkcrtv19ki788'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]' value='108' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]' />
              <text column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]</rows>
        <cols>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{53820873-B603-48BD-9E93-973A002AA70C}' />
    </worksheet>
    <worksheet name='Stack Bar (After)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_raw)' name='federated.0ilxnl71d7yepk1fkcrtv19ki788' />
          </datasources>
          <datasource-dependencies datasource='federated.0ilxnl71d7yepk1fkcrtv19ki788'>
            <column datatype='string' name='[Category (group) 3]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Category]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Furniture&quot;'>
                  <value>&quot;Furniture&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category (group) 5]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Machines &amp; Tables&quot;'>
                  <value>&quot;Machines&quot;</value>
                  <value>&quot;Tables&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (Category,YEAR(Order Date),Sub-Category (group) 5,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_1B0E707AF1DF414FA45918BCC53DF9BF]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='level-members' level='[Sub-Category (group) 5]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action2_2ACB08D8E33841DEA116B159F9ECD338]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (Category,YEAR(Order Date),Sub-Category (group) 5,Sub-Category)]</column>
            <column>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#000000' />
            <format attr='stroke-color' value='#000000' />
            <encoding attr='space' class='0' field='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[tyr:Order Date:qk]' field-type='quantitative' max='#2014-07-10 19:08:05.776#' min='#2010-11-25 04:21:13.079#' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]' field-type='quantitative' max='56569.178305339039' min='-1870.1152081359191' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Category (group) 3]' />
              <lod column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]</rows>
        <cols>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[tyr:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{A7ACE1A9-23EE-4C5B-8D84-57E0C1C6A14D}' />
    </worksheet>
    <worksheet name='Stack Bar (Before)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_raw)' name='federated.0ilxnl71d7yepk1fkcrtv19ki788' />
          </datasources>
          <datasource-dependencies datasource='federated.0ilxnl71d7yepk1fkcrtv19ki788'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#000000' />
            <format attr='stroke-color' value='#000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Category:nk]' />
              <text column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]</rows>
        <cols>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{A158BEFE-1A07-4E45-B603-21E7E9DF531E}' />
    </worksheet>
    <worksheet name='Table (After)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_raw)' name='federated.0ilxnl71d7yepk1fkcrtv19ki788' />
          </datasources>
          <datasource-dependencies datasource='federated.0ilxnl71d7yepk1fkcrtv19ki788'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category (group) 5]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Machines &amp; Tables&quot;'>
                  <value>&quot;Machines&quot;</value>
                  <value>&quot;Tables&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category (group) 6]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Bookcases, Machines, Tables&quot;'>
                  <value>&quot;Bookcases&quot;</value>
                  <value>&quot;Machines&quot;</value>
                  <value>&quot;Tables&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (Category,YEAR(Order Date),Sub-Category (group) 5,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_1B0E707AF1DF414FA45918BCC53DF9BF]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='level-members' level='[Sub-Category (group) 5]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action2_2ACB08D8E33841DEA116B159F9ECD338]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (Category,YEAR(Order Date),Sub-Category (group) 5,Sub-Category)]</column>
            <column>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Sub-Category (group) 6]' />
              <lod column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]</rows>
        <cols>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{632DFB2E-93BF-4522-BEC6-2133455BF864}' />
    </worksheet>
    <worksheet name='Table (Before)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_raw)' name='federated.0ilxnl71d7yepk1fkcrtv19ki788' />
          </datasources>
          <datasource-dependencies datasource='federated.0ilxnl71d7yepk1fkcrtv19ki788'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]</rows>
        <cols>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{1CF7DBB1-B2F1-46D6-81DA-C6A5044EFFD0}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='7' param='horz' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='98120' id='5' type-v2='layout-basic' w='89378' x='483' y='940'>
              <zone h='49060' id='3' name='Sheet 7' w='89378' x='483' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49060' id='9' name='Pie (After)' w='44689' x='45172' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49060' id='13' name='Stack Bar (After)' w='44689' x='483' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98120' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='89861' y='940'>
              <zone h='8578' id='8' name='Sheet 7' pane-specification-id='0' param='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]' type-v2='color' w='9656' x='89861' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8461' id='10' name='Pie (After)' pane-specification-id='0' param='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Sub-Category (group) 5]' type-v2='color' w='9656' x='89861' y='9518'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8461' id='14' name='Stack Bar (After)' pane-specification-id='0' param='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Category (group) 3]' type-v2='color' w='9656' x='89861' y='17979'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='26' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='25' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
                <zone fixed-size='280' h='49060' id='3' is-fixed='true' name='Sheet 7' w='89378' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8578' id='8' name='Sheet 7' pane-specification-id='0' param='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]' type-v2='color' w='9656' x='89861' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49060' id='13' is-fixed='true' name='Stack Bar (After)' w='44689' x='483' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8461' id='14' name='Stack Bar (After)' pane-specification-id='0' param='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Category (group) 3]' type-v2='color' w='9656' x='89861' y='17979'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49060' id='9' is-fixed='true' name='Pie (After)' w='44689' x='45172' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8461' id='10' name='Pie (After)' pane-specification-id='0' param='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Sub-Category (group) 5]' type-v2='color' w='9656' x='89861' y='9518'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B2062A89-4ABD-4467-AD72-68FD1CEE8DE4}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style>
        <style-rule element='story-description'>
          <format attr='background-color' id='story-description_7' value='#ffaa00d9' />
          <format attr='font-style' id='story-description_14' value='normal' />
          <format attr='font-weight' id='story-description_14' value='normal' />
          <format attr='text-decoration' id='story-description_14' value='none' />
          <format attr='font-style' id='story-description_15' value='normal' />
          <format attr='font-weight' id='story-description_15' value='normal' />
          <format attr='text-decoration' id='story-description_15' value='none' />
          <format attr='font-style' id='story-description_16' value='normal' />
          <format attr='font-weight' id='story-description_16' value='normal' />
          <format attr='text-decoration' id='story-description_16' value='none' />
          <format attr='font-style' id='story-description_17' value='normal' />
          <format attr='font-weight' id='story-description_17' value='normal' />
          <format attr='text-decoration' id='story-description_17' value='none' />
          <format attr='font-style' id='story-description_18' value='normal' />
          <format attr='font-weight' id='story-description_18' value='normal' />
          <format attr='text-decoration' id='story-description_18' value='none' />
          <format attr='font-style' id='story-description_19' value='normal' />
          <format attr='font-weight' id='story-description_19' value='normal' />
          <format attr='text-decoration' id='story-description_19' value='none' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='4357' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='5187' />
            <zone h='83506' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='15664'>
              <flipboard active-id='9' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Trend By Category' captured-sheet='Stack Bar (After)' id='1' />
                  <story-point caption='Tables &amp; Machines' captured-sheet='Pie (After)' id='2' />
                  <story-point caption='High Sales Low Profits' captured-sheet='Table (After)' id='3' />
                  <story-point caption='Tables 2011 - 2014' captured-sheet='Dashboard 1' id='4'>
                    <capturedDeltas>
                      <worksheet name='Pie (After)'>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='vertical'>
                              <node-reference>
                                <fields>
                                  <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]</field>
                                </fields>
                                <multibucket>
                                  <bucket>&quot;Tables&quot;</bucket>
                                </multibucket>
                              </node-reference>
                              <page-reference />
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Sheet 7'>
                        <filter class='categorical' column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (Category,YEAR(Order Date),Sub-Category (group) 5,Sub-Category)]'>
                          <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action1_1B0E707AF1DF414FA45918BCC53DF9BF]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[Category]' member='&quot;Furniture&quot;' />
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[Sub-Category (group) 5]' member='&quot;Machines &amp; Tables&quot;' />
                                <groupfilter function='crossjoin'>
                                  <groupfilter function='member' level='[Sub-Category]' member='&quot;Tables&quot;' />
                                  <groupfilter function='union'>
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2011' />
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' />
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2013' />
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2014' />
                                  </groupfilter>
                                </groupfilter>
                              </groupfilter>
                            </groupfilter>
                            <order>
                              <hierarchy name='[Category]' />
                              <hierarchy name='[yr:Order Date:ok]' />
                              <hierarchy name='[Sub-Category (group) 5]' />
                              <hierarchy name='[Sub-Category]' />
                            </order>
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Stack Bar (After)'>
                        <filter class='categorical' column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (Category,YEAR(Order Date),Sub-Category (group) 5,Sub-Category)]'>
                          <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action1_1B0E707AF1DF414FA45918BCC53DF9BF]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[Category]' member='&quot;Furniture&quot;' />
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[Sub-Category (group) 5]' member='&quot;Machines &amp; Tables&quot;' />
                                <groupfilter function='crossjoin'>
                                  <groupfilter function='member' level='[Sub-Category]' member='&quot;Tables&quot;' />
                                  <groupfilter function='union'>
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2011' />
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' />
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2013' />
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2014' />
                                  </groupfilter>
                                </groupfilter>
                              </groupfilter>
                            </groupfilter>
                            <order>
                              <hierarchy name='[Category]' />
                              <hierarchy name='[yr:Order Date:ok]' />
                              <hierarchy name='[Sub-Category (group) 5]' />
                              <hierarchy name='[Sub-Category]' />
                            </order>
                          </groupfilter>
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]' field-type='quantitative' max='26641.509418158967' min='-14508.940225081604' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[tyr:Order Date:qk]' field-type='quantitative' max='#2013-06-22 11:40:35.852#' min='#2010-12-03 10:52:07.167#' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <worksheet name='Table (After)'>
                        <filter class='categorical' column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (Category,YEAR(Order Date),Sub-Category (group) 5,Sub-Category)]'>
                          <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action1_1B0E707AF1DF414FA45918BCC53DF9BF]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[Category]' member='&quot;Furniture&quot;' />
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[Sub-Category (group) 5]' member='&quot;Machines &amp; Tables&quot;' />
                                <groupfilter function='crossjoin'>
                                  <groupfilter function='member' level='[Sub-Category]' member='&quot;Tables&quot;' />
                                  <groupfilter function='union'>
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2011' />
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' />
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2013' />
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2014' />
                                  </groupfilter>
                                </groupfilter>
                              </groupfilter>
                            </groupfilter>
                            <order>
                              <hierarchy name='[Category]' />
                              <hierarchy name='[yr:Order Date:ok]' />
                              <hierarchy name='[Sub-Category (group) 5]' />
                              <hierarchy name='[Sub-Category]' />
                            </order>
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Tables 2011' captured-sheet='Dashboard 1' id='5'>
                    <capturedDeltas>
                      <worksheet name='Pie (After)'>
                        <shelf-sort-deltas>
                          <shelf-sorts>
                            <shelf-sort-v2 dimension-to-sort='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]' shelf='rows'>
                              <sort-filter-info>
                                <sort-filter level-name='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[yr:Order Date:ok]' member-value='2011' />
                              </sort-filter-info>
                            </shelf-sort-v2>
                          </shelf-sorts>
                        </shelf-sort-deltas>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[yr:Order Date:ok]</field>
                                    <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Sub-Category (group) 5]</field>
                                  <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Category:nk]</field>
                                  <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]</field>
                                  <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]</field>
                                  <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[yr:Order Date:ok]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;Machines &amp; Tables&quot;</value>
                                <value>&quot;Furniture&quot;</value>
                                <value>&quot;Tables&quot;</value>
                                <value>-3124.0427000000009</value>
                                <value>2011</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Sheet 7'>
                        <filter class='categorical' column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (Category,YEAR(Order Date),Sub-Category (group) 5,Sub-Category)]'>
                          <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action1_1B0E707AF1DF414FA45918BCC53DF9BF]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[Category]' member='&quot;Furniture&quot;' />
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[Sub-Category (group) 5]' member='&quot;Machines &amp; Tables&quot;' />
                                <groupfilter function='crossjoin'>
                                  <groupfilter function='member' level='[Sub-Category]' member='&quot;Tables&quot;' />
                                  <groupfilter function='member' level='[yr:Order Date:ok]' member='2011' />
                                </groupfilter>
                              </groupfilter>
                            </groupfilter>
                            <order>
                              <hierarchy name='[Category]' />
                              <hierarchy name='[yr:Order Date:ok]' />
                              <hierarchy name='[Sub-Category (group) 5]' />
                              <hierarchy name='[Sub-Category]' />
                            </order>
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Stack Bar (After)'>
                        <filter class='categorical' column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (Category,YEAR(Order Date),Sub-Category (group) 5,Sub-Category)]'>
                          <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action1_1B0E707AF1DF414FA45918BCC53DF9BF]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[Category]' member='&quot;Furniture&quot;' />
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[Sub-Category (group) 5]' member='&quot;Machines &amp; Tables&quot;' />
                                <groupfilter function='crossjoin'>
                                  <groupfilter function='member' level='[Sub-Category]' member='&quot;Tables&quot;' />
                                  <groupfilter function='member' level='[yr:Order Date:ok]' member='2011' />
                                </groupfilter>
                              </groupfilter>
                            </groupfilter>
                            <order>
                              <hierarchy name='[Category]' />
                              <hierarchy name='[yr:Order Date:ok]' />
                              <hierarchy name='[Sub-Category (group) 5]' />
                              <hierarchy name='[Sub-Category]' />
                            </order>
                          </groupfilter>
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]' field-type='quantitative' max='26641.509418158967' min='-14508.940225081604' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[tyr:Order Date:qk]' field-type='quantitative' max='#2013-06-22 11:40:35.852#' min='#2010-12-03 10:52:07.167#' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <worksheet name='Table (After)'>
                        <filter class='categorical' column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (Category,YEAR(Order Date),Sub-Category (group) 5,Sub-Category)]'>
                          <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action1_1B0E707AF1DF414FA45918BCC53DF9BF]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[Category]' member='&quot;Furniture&quot;' />
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[Sub-Category (group) 5]' member='&quot;Machines &amp; Tables&quot;' />
                                <groupfilter function='crossjoin'>
                                  <groupfilter function='member' level='[Sub-Category]' member='&quot;Tables&quot;' />
                                  <groupfilter function='union'>
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2011' />
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' />
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2013' />
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2014' />
                                  </groupfilter>
                                </groupfilter>
                              </groupfilter>
                            </groupfilter>
                            <order>
                              <hierarchy name='[Category]' />
                              <hierarchy name='[yr:Order Date:ok]' />
                              <hierarchy name='[Sub-Category (group) 5]' />
                              <hierarchy name='[Sub-Category]' />
                            </order>
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Tables 2012' captured-sheet='Dashboard 1' id='6'>
                    <capturedDeltas>
                      <worksheet name='Pie (After)'>
                        <shelf-sort-deltas>
                          <shelf-sorts>
                            <shelf-sort-v2 dimension-to-sort='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]' shelf='rows'>
                              <sort-filter-info>
                                <sort-filter level-name='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[yr:Order Date:ok]' member-value='2011' />
                              </sort-filter-info>
                            </shelf-sort-v2>
                          </shelf-sorts>
                        </shelf-sort-deltas>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[yr:Order Date:ok]</field>
                                    <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Sub-Category (group) 5]</field>
                                  <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Category:nk]</field>
                                  <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]</field>
                                  <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]</field>
                                  <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[yr:Order Date:ok]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;Machines &amp; Tables&quot;</value>
                                <value>&quot;Furniture&quot;</value>
                                <value>&quot;Tables&quot;</value>
                                <value>-3509.8019000000008</value>
                                <value>2012</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Sheet 7'>
                        <filter class='categorical' column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (Category,YEAR(Order Date),Sub-Category (group) 5,Sub-Category)]'>
                          <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action1_1B0E707AF1DF414FA45918BCC53DF9BF]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[Category]' member='&quot;Furniture&quot;' />
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[Sub-Category (group) 5]' member='&quot;Machines &amp; Tables&quot;' />
                                <groupfilter function='crossjoin'>
                                  <groupfilter function='member' level='[Sub-Category]' member='&quot;Tables&quot;' />
                                  <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' />
                                </groupfilter>
                              </groupfilter>
                            </groupfilter>
                            <order>
                              <hierarchy name='[Category]' />
                              <hierarchy name='[yr:Order Date:ok]' />
                              <hierarchy name='[Sub-Category (group) 5]' />
                              <hierarchy name='[Sub-Category]' />
                            </order>
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Stack Bar (After)'>
                        <filter class='categorical' column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (Category,YEAR(Order Date),Sub-Category (group) 5,Sub-Category)]'>
                          <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action1_1B0E707AF1DF414FA45918BCC53DF9BF]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[Category]' member='&quot;Furniture&quot;' />
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[Sub-Category (group) 5]' member='&quot;Machines &amp; Tables&quot;' />
                                <groupfilter function='crossjoin'>
                                  <groupfilter function='member' level='[Sub-Category]' member='&quot;Tables&quot;' />
                                  <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' />
                                </groupfilter>
                              </groupfilter>
                            </groupfilter>
                            <order>
                              <hierarchy name='[Category]' />
                              <hierarchy name='[yr:Order Date:ok]' />
                              <hierarchy name='[Sub-Category (group) 5]' />
                              <hierarchy name='[Sub-Category]' />
                            </order>
                          </groupfilter>
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]' field-type='quantitative' max='26641.509418158967' min='-14508.940225081604' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[tyr:Order Date:qk]' field-type='quantitative' max='#2013-06-22 11:40:35.852#' min='#2010-12-03 10:52:07.167#' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <worksheet name='Table (After)'>
                        <filter class='categorical' column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (Category,YEAR(Order Date),Sub-Category (group) 5,Sub-Category)]'>
                          <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action1_1B0E707AF1DF414FA45918BCC53DF9BF]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[Category]' member='&quot;Furniture&quot;' />
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[Sub-Category (group) 5]' member='&quot;Machines &amp; Tables&quot;' />
                                <groupfilter function='crossjoin'>
                                  <groupfilter function='member' level='[Sub-Category]' member='&quot;Tables&quot;' />
                                  <groupfilter function='union'>
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2011' />
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' />
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2013' />
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2014' />
                                  </groupfilter>
                                </groupfilter>
                              </groupfilter>
                            </groupfilter>
                            <order>
                              <hierarchy name='[Category]' />
                              <hierarchy name='[yr:Order Date:ok]' />
                              <hierarchy name='[Sub-Category (group) 5]' />
                              <hierarchy name='[Sub-Category]' />
                            </order>
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Tables 2013' captured-sheet='Dashboard 1' id='7'>
                    <capturedDeltas>
                      <worksheet name='Pie (After)'>
                        <shelf-sort-deltas>
                          <shelf-sorts>
                            <shelf-sort-v2 dimension-to-sort='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]' shelf='rows'>
                              <sort-filter-info>
                                <sort-filter level-name='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[yr:Order Date:ok]' member-value='2011' />
                              </sort-filter-info>
                            </shelf-sort-v2>
                          </shelf-sorts>
                        </shelf-sort-deltas>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[yr:Order Date:ok]</field>
                                    <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Sub-Category (group) 5]</field>
                                  <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Category:nk]</field>
                                  <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]</field>
                                  <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]</field>
                                  <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[yr:Order Date:ok]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;Machines &amp; Tables&quot;</value>
                                <value>&quot;Furniture&quot;</value>
                                <value>&quot;Tables&quot;</value>
                                <value>-2950.9418000000005</value>
                                <value>2013</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Sheet 7'>
                        <filter class='categorical' column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (Category,YEAR(Order Date),Sub-Category (group) 5,Sub-Category)]'>
                          <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action1_1B0E707AF1DF414FA45918BCC53DF9BF]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[Category]' member='&quot;Furniture&quot;' />
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[Sub-Category (group) 5]' member='&quot;Machines &amp; Tables&quot;' />
                                <groupfilter function='crossjoin'>
                                  <groupfilter function='member' level='[Sub-Category]' member='&quot;Tables&quot;' />
                                  <groupfilter function='member' level='[yr:Order Date:ok]' member='2013' />
                                </groupfilter>
                              </groupfilter>
                            </groupfilter>
                            <order>
                              <hierarchy name='[Category]' />
                              <hierarchy name='[yr:Order Date:ok]' />
                              <hierarchy name='[Sub-Category (group) 5]' />
                              <hierarchy name='[Sub-Category]' />
                            </order>
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Stack Bar (After)'>
                        <filter class='categorical' column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (Category,YEAR(Order Date),Sub-Category (group) 5,Sub-Category)]'>
                          <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action1_1B0E707AF1DF414FA45918BCC53DF9BF]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[Category]' member='&quot;Furniture&quot;' />
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[Sub-Category (group) 5]' member='&quot;Machines &amp; Tables&quot;' />
                                <groupfilter function='crossjoin'>
                                  <groupfilter function='member' level='[Sub-Category]' member='&quot;Tables&quot;' />
                                  <groupfilter function='member' level='[yr:Order Date:ok]' member='2013' />
                                </groupfilter>
                              </groupfilter>
                            </groupfilter>
                            <order>
                              <hierarchy name='[Category]' />
                              <hierarchy name='[yr:Order Date:ok]' />
                              <hierarchy name='[Sub-Category (group) 5]' />
                              <hierarchy name='[Sub-Category]' />
                            </order>
                          </groupfilter>
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]' field-type='quantitative' max='26641.509418158967' min='-14508.940225081604' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[tyr:Order Date:qk]' field-type='quantitative' max='#2013-06-22 11:40:35.852#' min='#2010-12-03 10:52:07.167#' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <worksheet name='Table (After)'>
                        <filter class='categorical' column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (Category,YEAR(Order Date),Sub-Category (group) 5,Sub-Category)]'>
                          <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action1_1B0E707AF1DF414FA45918BCC53DF9BF]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[Category]' member='&quot;Furniture&quot;' />
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[Sub-Category (group) 5]' member='&quot;Machines &amp; Tables&quot;' />
                                <groupfilter function='crossjoin'>
                                  <groupfilter function='member' level='[Sub-Category]' member='&quot;Tables&quot;' />
                                  <groupfilter function='union'>
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2011' />
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' />
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2013' />
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2014' />
                                  </groupfilter>
                                </groupfilter>
                              </groupfilter>
                            </groupfilter>
                            <order>
                              <hierarchy name='[Category]' />
                              <hierarchy name='[yr:Order Date:ok]' />
                              <hierarchy name='[Sub-Category (group) 5]' />
                              <hierarchy name='[Sub-Category]' />
                            </order>
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Tables 2014' captured-sheet='Dashboard 1' id='8'>
                    <capturedDeltas>
                      <worksheet name='Pie (After)'>
                        <shelf-sort-deltas>
                          <shelf-sorts>
                            <shelf-sort-v2 dimension-to-sort='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]' shelf='rows'>
                              <sort-filter-info>
                                <sort-filter level-name='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[yr:Order Date:ok]' member-value='2011' />
                              </sort-filter-info>
                            </shelf-sort-v2>
                          </shelf-sorts>
                        </shelf-sort-deltas>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[yr:Order Date:ok]</field>
                                    <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Sub-Category (group) 5]</field>
                                  <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Category:nk]</field>
                                  <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]</field>
                                  <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]</field>
                                  <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[yr:Order Date:ok]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;Machines &amp; Tables&quot;</value>
                                <value>&quot;Furniture&quot;</value>
                                <value>&quot;Tables&quot;</value>
                                <value>-8140.6947000000018</value>
                                <value>2014</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Sheet 7'>
                        <filter class='categorical' column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (Category,YEAR(Order Date),Sub-Category (group) 5,Sub-Category)]'>
                          <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action1_1B0E707AF1DF414FA45918BCC53DF9BF]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[Category]' member='&quot;Furniture&quot;' />
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[Sub-Category (group) 5]' member='&quot;Machines &amp; Tables&quot;' />
                                <groupfilter function='crossjoin'>
                                  <groupfilter function='member' level='[Sub-Category]' member='&quot;Tables&quot;' />
                                  <groupfilter function='member' level='[yr:Order Date:ok]' member='2014' />
                                </groupfilter>
                              </groupfilter>
                            </groupfilter>
                            <order>
                              <hierarchy name='[Category]' />
                              <hierarchy name='[yr:Order Date:ok]' />
                              <hierarchy name='[Sub-Category (group) 5]' />
                              <hierarchy name='[Sub-Category]' />
                            </order>
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Stack Bar (After)'>
                        <filter class='categorical' column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (Category,YEAR(Order Date),Sub-Category (group) 5,Sub-Category)]'>
                          <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action1_1B0E707AF1DF414FA45918BCC53DF9BF]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[Category]' member='&quot;Furniture&quot;' />
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[Sub-Category (group) 5]' member='&quot;Machines &amp; Tables&quot;' />
                                <groupfilter function='crossjoin'>
                                  <groupfilter function='member' level='[Sub-Category]' member='&quot;Tables&quot;' />
                                  <groupfilter function='member' level='[yr:Order Date:ok]' member='2014' />
                                </groupfilter>
                              </groupfilter>
                            </groupfilter>
                            <order>
                              <hierarchy name='[Category]' />
                              <hierarchy name='[yr:Order Date:ok]' />
                              <hierarchy name='[Sub-Category (group) 5]' />
                              <hierarchy name='[Sub-Category]' />
                            </order>
                          </groupfilter>
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]' field-type='quantitative' max='26641.509418158967' min='-14508.940225081604' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[tyr:Order Date:qk]' field-type='quantitative' max='#2013-06-22 11:40:35.852#' min='#2010-12-03 10:52:07.167#' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <worksheet name='Table (After)'>
                        <filter class='categorical' column='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Action (Category,YEAR(Order Date),Sub-Category (group) 5,Sub-Category)]'>
                          <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action1_1B0E707AF1DF414FA45918BCC53DF9BF]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[Category]' member='&quot;Furniture&quot;' />
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[Sub-Category (group) 5]' member='&quot;Machines &amp; Tables&quot;' />
                                <groupfilter function='crossjoin'>
                                  <groupfilter function='member' level='[Sub-Category]' member='&quot;Tables&quot;' />
                                  <groupfilter function='union'>
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2011' />
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' />
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2013' />
                                    <groupfilter function='member' level='[yr:Order Date:ok]' member='2014' />
                                  </groupfilter>
                                </groupfilter>
                              </groupfilter>
                            </groupfilter>
                            <order>
                              <hierarchy name='[Category]' />
                              <hierarchy name='[yr:Order Date:ok]' />
                              <hierarchy name='[Sub-Category (group) 5]' />
                              <hierarchy name='[Sub-Category]' />
                            </order>
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Conclusion' captured-sheet='' id='9' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' h='6639' hidden='true' id='6' story-point-id='1' type-v2='text' w='33268' x='61319' y='48548'>
          <formatted-text>
            <run>Technology &amp; Office Suppliers - increasing</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='3320' hidden='true' id='7' story-point-id='1' type-v2='text' w='15157' x='59941' y='76763'>
          <formatted-text>
            <run>Furniture flat</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='3320' hidden='true' id='8' story-point-id='2' type-v2='text' w='23524' x='74311' y='51141'>
          <formatted-text>
            <run>Tables &amp; Machines </run>
            <run fontcolor='#000000' fontname='Wingdings' fontsize='15'>æ</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='3320' hidden='true' id='9' story-point-id='2' type-v2='text' w='22736' x='77067' y='27905'>
          <formatted-text>
            <run>Copiers and Phone </run>
            <run fontcolor='#000000' fontname='Wingdings' fontsize='15'>ä</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='6639' hidden='true' id='10' story-point-id='3' type-v2='text' w='33268' x='57382' y='57780'>
          <formatted-text>
            <run>Bookcases, Table &amp; Machine - Low Profit/High Sales</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='3320' hidden='true' id='11' story-point-id='4' type-v2='text' w='32776' x='10925' y='72510'>
          <formatted-text>
            <run>Sharp drop from 2013 to 2014</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='3320' hidden='true' id='12' story-point-id='4' type-v2='text' w='22933' x='3248' y='48029'>
          <formatted-text>
            <run>New York &amp; Illinois </run>
            <run fontcolor='#000000' fontname='Wingdings' fontsize='15'>æ</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='6639' hidden='true' id='13' story-point-id='4' type-v2='text' w='33268' x='62008' y='42946'>
          <formatted-text>
            <run>If trend continue, profit will get worse!</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='6639' hidden='true' id='16' story-point-id='5' type-v2='text' w='33268' x='62008' y='42946'>
          <formatted-text>
            <run>Best: Virginia&#10;Worst: New York</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='6639' hidden='true' id='17' story-point-id='6' type-v2='text' w='33268' x='62008' y='42946'>
          <formatted-text>
            <run>Best: Washington
Worst:North Carolina</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='6639' hidden='true' id='18' story-point-id='7' type-v2='text' w='33268' x='62008' y='42946'>
          <formatted-text>
            <run>Best: Washington&#10;Worst: Arizona</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='6639' hidden='true' id='19' story-point-id='8' type-v2='text' w='33268' x='62008' y='42946'>
          <formatted-text>
            <run>Best: Washington
Worst: Tenessee</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='26141' id='20' story-point-id='9' type-v2='text' w='33268' x='16732' y='27490'>
          <formatted-text>
            <run bold='true' fontalignment='0'>Recommendation:</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='15'>1. Approve to build task force</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='15'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='15'>2. Find out Washington&apos;s good practice</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='15'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='15'>3. Find reasons for high sales but low profit</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='15'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='15'>4. Increase profit for Tables by 10%</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='15'>Æ </run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='13174' id='21' story-point-id='9' type-v2='text' w='33268' x='54134' y='26763'>
          <formatted-text>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='15' underline='true'>Conclusion:</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='15'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='15'>East Region : Poor Performance</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='15'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='15'>What is it that Washington is doing right?</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='15'>Æ </run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{189F4624-37C7-4C89-A17B-EB9E7CB240FA}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Stack Bar (Before)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Category:nk]</field>
            <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9DD86970-25B1-46A2-A1C0-1ADE12931A7E}' />
    </window>
    <window class='worksheet' name='Stack Bar (After)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Category (group) 3]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Category (group) 3]</field>
            <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{01C98AFA-AAD9-42CA-B9FC-9DB89C5F66E9}' />
    </window>
    <window class='worksheet' name='Pie (Before)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Category:nk]</field>
            <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]</field>
            <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{238396D2-D4E0-4174-8B2D-204B2327CA3C}' />
    </window>
    <window class='worksheet' name='Pie (After)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Sub-Category (group) 5]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Sub-Category (group) 5]</field>
            <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]</field>
            <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E5966887-2CAF-4B39-8240-2B201326DF7E}' />
    </window>
    <window class='worksheet' name='Table (Before)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6B1799E0-6EFF-4B86-852A-AEA1DB5132C0}' />
    </window>
    <window class='worksheet' name='Table (After)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Sub-Category (group) 6]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[:Measure Names]</field>
            <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Sub-Category (group) 6]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4424E32E-94D4-458B-BB1D-7CE59D6168F5}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9F480251-1301-4262-B7FB-39C371E6CCB4}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ilxnl71d7yepk1fkcrtv19ki788].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Region:nk]</field>
            <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C1EAF17F-FF6F-4680-BB50-E3DBA5761B46}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Pie (After)'>
          <highlight>
            <color-one-way>
              <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Sub-Category (group) 5]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 7'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Stack Bar (After)'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0ilxnl71d7yepk1fkcrtv19ki788].[Category (group) 3]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{0F248FF3-AE5F-4829-A4A0-FAC03AC6FA0C}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{3888D28E-EA6C-4FC4-93F9-9D1644C3D661}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Pie (After)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pie (Before)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO3d6XMb54Hn8W93o3GDuHiBt0iKh0SJlKjDUixFkp3EdjJJJrNJdio7NanZ
      2t2qrZp9M1u1+zL7J+xbbyVblVRt7STZjDOy4yux5ciSJVGiJOokJYI3ARIgSIC4ge7eF7Rg
      UbdkS5TSz+eNTABGP93Ar/u5+oFkGIaBIJiUvNEFEISNJAIgmJoIgLAhxq9f4uSpIUr67TXw
      AmOjk3e9NhOP8qdjx7kxOV95TNfKJFOrX7ocli/9DoLwmLRsjJFwgld31PDBB5+glzK0trWw
      GJ8nHtNYjs9QVt3IpSSG4qHdC476zYwOf4pV2cXNa2M0NtXzwSen+c43DzE9M0vHlp0013of
      uyziCiA8e4aBJMtYLArlfJqC6icfGadn90vIuWXOXR5D18pMzUbYvWvH5/+ThCLJTE9OkUvN
      kSzaad/cxdjFM2goFIuFJyqKJHqBhI1w/dIwsWSBwYEeZmJ5WgIKZy+P4amqoZSOYa2qRZHK
      9G3Zwmpsns8u3aSppQ1beYXY0jLNXTuYGbtIc0szNybn6N26nbqA57HLIQIgmNpzXQUql0oU
      S2UMQ6dQKGAYBoauoek6hmFQLpc3uogvjPXHsohhGOi6hqav/bt2fDe6lM/ec9wILjMyfI5r
      18Ns6qwlmynhrt9M5sYxpI5vsSWQ5zfvnuQf/9Pfb3RBXwBlLp47x/WxCVrbghTyZTyNPaxc
      +RDblr+iybLETHgUT9dBBjtrN7qwz9RzfAWw4PVY8Te1sBRP8fX9u4hEomzp6QagvqWdoMe+
      wWV8UViocqsEm1uJL6U5vH8nc3MLbOnpAqCmJshy3kJnY2CDy/nsPb8B0DMc/cOfCVY5aayv
      5sNjp2hpaeDa6E0mx8eYHL/B3Nwss4uJjS7p809Lc/TdPxPwOGiqD/DesTO0tdRzbTTMxM0x
      /vVffo+/to5iPr/RJX3mRCNYMLVKGyCdTqNp2kaWRRCeOXEFEEzt+W0DCMIzIAIgmJoIgGBq
      IgCCqYkACKYmAiCYmgiAYGoiAIKpiQAIpiYCIJiaCIBgaiIAgqmJAAimJgIgmJoIgGBqIgCC
      qYkACKYmAiCYmgiAYGoiAIKpiQAIpiYCIJiaCIBgaiIAgqmJAAimJgIgmJoIgGBqIgCCqYkA
      CKYmAiCYmgiAYGoiAIKpiQAIpiYCIJiaCIBgaiIAgqmJAAimJgIgmJoIgGBqIgCCqYkACKYm
      AiCYmgiAYGoiAIKpiQAIpiYCIJiaCIBgaiIAgqmJAAimJgIgmJoIgGBqIgCCqYkACKYmAiCY
      mgiAYGoiAIKpiQAIpiYCIJiaCIBgaiIAgqmJAAimJgIgmJoIgGBqIgCCqYkACH/RTp48yR//
      +EcKhcJdz0UiESwbUCZBeGZyuRwul4uxsTGmp6dpa2sjkUhQLBax2+3iCvC8SyQSHD16lKGh
      obueMwyDqampDSjViyOZTFIqlRgdHWX37t3Mz8+Tz+dxuVwsLi6KK8DzLpVK4XA4iEajDA0N
      MT8/z7Zt27h8+TKdnZ0sLCyQSCTI5XJYLBZUVSUSiRAKhVhZWWHTpk1cvXqV1tZWbt68yf79
      +6mpqXnodpPJJMvLy7S2tiJJ0l1lqqqqelq7/JXy+/2kUikOHDjA2bNn6ezsZGlpiUKhwMDA
      AJJhGMbT2vj777+PpmnU1tbS3d2NxWJBURSy2SzJZBKHw4HX66VQKGCz2chkMrjdbgqFAoqi
      IMsypVKp8pzP56t8GHNzc1y8eJFdu3ZRW1u7brvLy8u4XC6sVuvT2rVnZmpqing8zvz8PFar
      le7ubo4dO8b3v/99hoaGuHz5Mt/85jeZn5/nyJEjvPPOO4yNjfHd736XsbExUqkUPp+P5uZm
      IpEILS0t9PT0PHCb5XKZo0ePMjg4iKqqTExMsGXLFi5dukRPTw/pdBq73c7MzAydnZ1EIhGs
      ViuZTIb+/v67AvM8e6pXgGKxSKlUolQq8eGHHyJJEna7HQCn00k4HGbfvn2Ew2H6+/t56623
      8Pv9LC8vc+TIET7++GMikQiDg4M4HA5effVVFEUB4NKlS7z++uvEYjHeeustQqEQkUgEwzBo
      bW3F5/MxOjpKfX09V69epbOzk2g0yqFDh/B6vU9zt79SXq+Xy5cv09TUhNfrJRwO8zd/8zec
      OnWK7du3s2XLFrLZLC0tLVy8eJG6ujpcLhcWiwWPx8OePXu4cOECfr+fxcVFAoHAQ7eZz+ep
      qamhpaWF9957j82bN3PixAm2bt3KxYsX0XWd+fl5DMNgdXWVtrY2JicnK5/ti+SpXwGCwSBL
      S0tkMhkkScJmsyHLMm63m9XVVWpqaojFYtTX1zM9PU0ul6Ozs5MbN26gqiodHR34fD4++ugj
      fvSjH+HxeAB47733OHDgQOXLcfnyZdxuN4ZhkM/nKRaLpFIpuru7KRaLdHd3c/LkSTo7O+nq
      6npau/wXQdd13n33XTweD5IkEYvFaGlpYXx8nK6uLvL5PLlcDk3TCIVCdHR0MDo6yvT0NN/+
      9rcrJ6kXwVMNQDqdJpvNEgwGyWQyqKqKoihkMpnKwS2VSuuqQC6Xi0KhgKqqyLJMLpfD4XCQ
      y+XWVYGy2SynT5+mv7+fK1eu0NPTwwcffEB/f3/lLDg0NFSpetntds6ePcvu3btxuVxPa5ef
      S1qpzMJChDPLp1jKxFnOJgjkl9hGFpuzFrurFm/NVgKhQSxWzz2rMIuLi9hsthfq6vkonmoA
      vgqV4hlQ0guoigpIgLTugzIMg1wuh9Pp3JByfpVOnjzJ/v37MQwDXddZWFhAlmXq6uoqx+PM
      mTPs3r0bAFmW7/rSGoZBKrJM+NR14uMR4uk4f9j0PpqsA9Ct59lTnF/3/1isbgKh3TT3/ICa
      loPPVV1+cnKSK1eusGvXLurq6u75msXFRWpqapAkiZmZGUKhEIqiEIvF7mon3vJc9gIZhkFu
      JcPC6CwLY/NkllLk0zmG6/4Pe5QoNkcQuztEsGE3tW2v4wm0IsvyX8SXH9aunADXr1/nN7/5
      Da+88grz8/O4XC6mpqZIp9Ns376d48ePE41G+cEPfrCuwa+l0wx9PMLimXEMfS0wDuy4S26S
      ttR9t1suplmc+pjFqY/x1+9g865/JBAafC6CsLi4iMPhYHl5mXK5TCQSIR6P09jYyLVr1wgE
      AgQCASKRCAsLCzidTi5cuEB7ezvFYpHh4WFyuRzbt2/n2rVr+P1+YrHY8xUAwzAox+NEJhYY
      PzZKKplZ97xsyOhagVx6nlx6nuXoOSYmi7j8vbR391LX0IQsy3e958LCAna7HYfDgc1me5a7
      9EQ0TWN2dpaJiQn6+/tZXl6mpaWFRCKB2+3mpZdeIh6P09HRQSQSIZlMrnVtGgZMhJFPfspS
      vIiuW5FY+/JKSATy/gcG4HbL0fMMvfMfaNv27+ja/V+QFfVp7vJDybJMc3Mzuq6zurrKwsIC
      LpeL7u5u8vk8pVKJRCJBZ2cnk5OTqKrKkSNHGBkZIZfLUVVVRSgUYmxsjEOHDnHy5Em8Xi/K
      z372s59t6J59Ts9lWf5fPyf7u98xZVepdVYTX1pd95qlqjHqpcQXD8heZPc3KJdKLEbmWY7H
      qPL5sN3WG1Eul3nnnXeIRCLMzMywuLhIfX09w8PD2O124vE4o6Oj1NbW8tlnn1FbW8vp06fx
      er0b1qtRXV1NIpGgt7eXYDBIb28vmqYxMDBAW1sbVquVrq4unE4nPp+PxsZGJMOAixfg9GdI
      mkaN1eBaVsaqfXFCKMhF5j2RtW0YZRq11fsV4XMGKwsXWV0apab5ayiWjevlsVgs1NTUEAgE
      GBkZoampiaamJjweD6qq4vP58Pv9lTZmV1cXVVVVWK1W/H4/wWAQr9eL1+vlk08+wW63Y7Va
      H9wGGBsb48qVK7z00kuEQqF7viYWixEMBpFlmZs3b9LU1ITNZntgvetO+vIUmX/5b6x8rGGU
      VOTtW0n2vczk2RnKml553Y3Gt9lquV75W3LuQ/F8c917KRYLWwYGqW9sAqBUKvHmm2/S0tKC
      qqr09fVx5swZ+vr6GB8fxzAMamtrmZycBNa6ZwuFAnv37qWhoeGRyr/RDF0n8/vf44wvIN/W
      AzOUh+k5K5bPrwKrapo/bPoApHu3AR7EW7OVPd/5BRbV8ZWX/1nKZDKV8SOr1frgK8CtQRhV
      VclkMoyMjDA0NES5XOb9999nYmKCdDpNJBLh1KlTqKrKhQsXSKVSRCIRhoeHGR4eRtd1zpw5
      Qzgc5k9/+hN+v7/SH62tTpL77b+H1ASKI08x4UVZzbDaUItD8bCazlfKk/SMU63EPv9LQnG/
      iqSs75UwdJ1YZB7FYsHrD6DrOoZh8Morr5BMJmlsbCSbzRIOh/F6vQQCgcpZpFwu09PTw/Ly
      MsALE4DssfdJ/PL/UkymcNRWI31eDaxTDG6UQSquhcKiW5iqmqGklB7xCnCLTEnZSb4UoKa+
      4bloEzwpq9VKc3Nzpav2gQFYXFykr68Ph8NBLBZjYWGBhoYGBgYG0DQNh8NBsVikvb2d+fl5
      FEXh5ZdfZnFxkUKhgN/vp7m5ufI+i4uLtLe3E4lE6OjoQC8lyYb/J4YlB/FlFFsBdIliwoZV
      1tFaO1lZ+OJDSrnDBJXFtT8UP7L7CJJ07+lMiVgMr9+Pp8pLc3MzsPaFttlsNDc309vbS1tb
      Gw0NDVRXV9Pc3ExXVxeBQICurq4X5suvRS5S+NN/Rc9BYcmgkEzhqA4iKwqyJFFl05lalVEM
      CRmJhH2ZpD31GAGwIHu/j2TfQWZ1FYvFgjcQrPS0nD17lurqavL5/FOrMhqGwZtvvklfX99a
      O7FcRpIkisUiiqJw4sQJVFXF6XRSLBaRZZlisYgkSei6jqZplROhruuUy+VKW/GBAfB4PLhc
      Lnw+H7FYjK1bt9LY2Ijdbsfr9VJbW0soFKrs+Pbt23E4HPj9fkKhEHV1dQSDQaqqqvjtb39L
      e3s7LpeL3t5erDYbN268hadwGRx28HpgaRmLM0057USOFSm0NaIVrBSKZQAyrin8ligAkmMX
      sq3zQYeN+EKUulAj6gZNiZibm+P48eN4PJ7KAN6dYrEYDocDSZKIRqOVgcJYLPbQ8QrD0Ml9
      +j8gfhPVn0JWy+SjFgrLa1cCWVHwSBCXDXJZGQmJvFIg4o4S0Es06ekH74DkRPb9CNneXTnr
      rySWaGhpxaKqnD59mkOHDvHhhx8yMjJCqVQinU5z/vx53G43J0+eRNM0pqenmZ2dZWVlhfHx
      cZqamh7rKnLr5JrP5/n000+5fv06sViMcDjMwsIC2WyWxcVF0uk0P//5z1FVlStXrlSmy8iy
      zC9/+UuGhoaYnJwknU7T0tJCvqw/OABWqxVFUZAkiVAohNvtxmazVUZ0bTYbdrsdu91OKBTC
      arUiy3LlcZvNhtVqxeVysW3bNtrb26mvr8fhcHB9Mcrvx5dZ1jw0Whax2C3g80JiGdWdpLDo
      QS2W0Js7SS1nAcg5Z/Cq84CE4nkdSXE/8MDpuk6xUKDu8/bAszY+Pl45PplMhomJCUZHR1ld
      XeXEiRNEIhF0XSeRSFS66S5evAisTUa7fPkyIyMjuFwujh8/zsrKCsPDw6iqit/vp7xylmLp
      DFS5IZPFYl3F4slQiKnkFlM4a2uQLRaqbQY3MzKyJqMYMjd9E3iNPC169v6FV3wovn+LbG1Z
      97BhGJRLZWrqQ1y/fp2pqSk6OzupqqqiWCwSi8Xo6enh3Llz9Pf3MzExwcWLFzEMA1VVyefz
      tLW1PVYAlpaWiEajLCws4HA4sNvtWCwW/H4/mqZRLBaBtZmzPp8Pi8XCnj17WF5eplQq0dra
      SjweZ//+/ZVZA9u2bePqYu7ZdIPemvpwS0nT+DR8AwOJG8VmFsp+DrmGafLEkLb1II1cx9U+
      SzZsx92ZxGJRKJc1FOPz6o5SDZaHz2gEWIzMsZJYwhcIPo1deyTZbBZZlolEIqiqSk9PT6Xr
      LhaL0dHRUZkzdejQIa5cuUImk8HpdFJTU8PVq1c5fPgwJ0+exO12s7y8jKGXyUffAUmCoB98
      VRizESzTETxbbpIJNxE7L1GzYztum5UtQY1rERlP0YNVf8gVUalB8f0tksV/z6ejs9O0dXbR
      3NxMf38/hUKB+fn5yoj+hQsX2Lp1K06nk/r6esrlMi6XC5fLVWlfPY7m5mba2trI5XKcOHGC
      gYEB5ubmsNvt7Nixg3x+rZ1YLpfJZrNUVVVhs9nYvXs3hUIBTdP4zne+g6ZpWCwW3njjDQxJ
      Zjye35iR4JvxJP965RKF8hd1UAmDPts4LzmvYM0kYeQ6+fEAGWkHs21fIxFdJRE8Sb37JJLr
      AIr7yCNvr6a+gf49Lz3zxls0GsXtdqOqKh999BE1NTXU1dXR0NDAwsICmqZRLpdRFIXR0VG6
      u7upq6sjFotRLBZRVRWr1Uo2m+XChQuVq2ljYyNV9bX8Yfgo3dYpNttmsElr1UTyBQhPw0KC
      3EwdenoTtTv7wWrlT4sWcmkLf248gd1xk5dLsbsLrTaj+H6MJD+4+tW5pY9Nm7ufwlF7NhbT
      Rd69vrwxA2GzSYOAs5OyXiBbjJMrJdCNMpcKncyWajnsOkeoX8LOGNqlG9TQRwIZVV8rrmzb
      +ljbW1mKV9L/LNXX11f++/XXX1/33J2N7JaWL6oaTU3rq2zpdBq/38/evXtxONa6IY+HbxAt
      B4mWA5zMbqPTOkuPbYo6WwKltxNCKRyeaUozl1m8UKJm+052Bhx8mlWozdaQcty8q7ySrQfZ
      +9dI0sPbTPGF6AsdgOhqCdiAqRBl3WA+udZCVxU7XkcTHnuIfClJthhnWYPfrx5g0DHKzgEL
      jvINtKlzOANfI6MroNSA5dHGF24plYqsLMWprqt/+IufQ263m0OHDq17bDz+RXdwCZVrxU1c
      K7YRVFJsts7Q7Z3CtcONGoqhXL3K0rUige69bPLJJLLVrBq3Xw0lJMcgsuc1JOnRZnKmlpfJ
      57LYHS/m9JNYeq3d8MwDkMqXKenra12ypOC0BnBaA5S0LJlinLN5O5NyiCODHrz5y9SXelg2
      FCR77xNVZZLLiRc2AHcq6xor+Xs1YCWWNC9LOS9DuV6a1QV6ayZpPTiD/eYsyUvH6Gw6xEzG
      w6z2xVlecn0d2fXyI3/5AXRdI5/LvZABMAyDZF4DNiAARmyZhotXKLqcFB12ii4nmtWKZlXR
      LRZUxYnX3kyVvZF8qZF/LYXYtbeW1jOnsUqhh3R93l8+l/uK92TjFMtQZW/DqhTQjCKaXkI3
      imh6Ed3Q0A0NDYXJUgOTpRAuaQddm6bpDl1FGfkzWxwHmSh6QZ1Hrvo2kn3HE51UCvn8w1/0
      HNLLGvUnz+IzpGcfACm6ROjqF9MZDEBXFHSLQtlmo/R5KIoOByWng6IzyKT1uyT6x/CEr1JS
      apEN47E/sGLhxfyw7qWkG1hkDy7b+rEFwzAw0DEMHd0oo+klNKOIrpe4rjUxatlJcHCB7uhV
      OhNBZO8PkO2P1566XSH/Yp5UjEIJ39QMeqG0AY1gXV/3pwQomoaiaaiFIo7U+tHJok0nFSix
      UlcmWa3y4fk4JasPVZGwW8CmgF2VsCp8/reEzQLyHfmwVD3Xtz18eYaBUi5jzeawFApIn1cz
      Za2MmiugZrNYinlyDo1Zdx2Sx8p7N5pw28v4HRI+u4RDXfs87KqEzw6WOw/iX4rbduuZB8Aa
      fPhqAppiEG8sENmUI9ZUQLdAsAyHp8oMrV4jom4iptSt9YEDa9eRB/tWlY3DX7Lszws7Bs1X
      riGtprFlsljyBazZHHK5XHnN7V/dgl1jviPHeF+OrEfjjTTkx4uoywVu2Hq41/GTAI8NAg4J
      r11a+9cGVTYJp3UtHI4XsP4PIFtVJEUBnvAKsLq6imEYT7Q0hsV974OmSwapYIlIe57F5jx5
      9/orxe48+GwyEhAqTSJhkFDqbwvBg9V4X8wP615Ui0x9eAItff8qiCEZpPxlZnqyLLTkKdsM
      MGB7AXqKcAFw68t4tCVWlbsHCQ0gVYBUweD2gMjS2lXXY5Po2fP831txL7JqweJ2oGXzjx8A
      TdM4evQovb29XL16lZ6eHmpra8lkMoRCIWKxGFarlUQiQV9fH6dOnaKnp4dEIoHT6aQx1IDi
      dqClcxgYFBw68x05om15VgPl9aeuz3k16C5AySKhyKDpBvWlSYBHDkHfpsfrOn2eyRYFW52f
      7D0CoMsGC615ZrqyLNeV1h3PWg2+nvniIQmoL02Skb3o0qN9FXQDcmWQLBa8VQ+eivI0lctl
      PvvsM/r6+tbdK/6obPV+CotPMBCmKAoNDQ3Mzc1RXV3Njh07eO+997Db7ZV5IfPz85w+fZp4
      PM62bds4d+4co6OjVFVV8dOf/hTnjjZGZ4eZ78iRCBUxHrQ+nQG7c2t1NV0GhyqRLhiVDw8e
      HgKv28bm5o2bCvE0VPVtIjv+xXz+vENjdnOOua4seZd+1+ttOryRhjuHuKxGkdrSDFHrpsfa
      fkeDnyrXxl0BTp8+TUNDA6urq7z55pv85Cc/4fr163R1dbG6uorVamV+fp6GhobKhLxdu3Yx
      PDzM4OAgzvYGUiPhJ7sC5HI5crkcwWCQ4eFhyuVy5Ra95ubmyhIlbrebU6dOYbVaqa6uZvPm
      zWvvcaiBS9MfP9L2XMbaJRtAkcBuWQsA8Mgh2NPTiPKcNegKhQIfffQRgUCA5ubmx55+7e5s
      wlBgJVBkpifLYlMBzXqftpABh7MQ1O79tF9bIKlVk1PuPWP1XvZt3ZgJhrfs3r2bEydOYLVa
      2bFjB/F4nL6+vsotkK+++irXrl1jenqa5uZmPB4Px44dQ1VVxsfH2dreBtITNIIVRblrWP9O
      3/ve94C1uTCJRIKenh42bfriDNPq7aTe0Ug0N/fQ7e3Ig+3zz1WRJRxWCW67VfhhIbBaFP76
      4JMNnj1NxWKReDzOwMAAv/71rzly5AjhcBhFUXC73VitVqxWK9PT03R0dDA+Pk5bWxvz8/N4
      PB4OvnyAyR86GLNG71ltrDBgawG23L04coXMWpVyQt4K97m/4nYOq4U9vY2Pv9NfoWg0SqFQ
      IBgMkk6ncblcnD59mubmZux2O/rnvY3V1dUAjIyM8PLLLxMOh9fuC6nzE/6eunHLokyu3uR3
      E7/CeEAPjkOHv19Zuwrc8svTGa4vlO96rQEsqK0sKaF1Ifj2S5v5j98dpFwuc+bMGfbv3//E
      Zb592Y0vq1Qqkc/nefvtt/H5fBw+fJjjx48jyzKyLHP48GH++Z//mXA4zJ49e9i8eTOXLl0i
      HA6za9cu9u3bx0x6gl+H//cDt1NThh+nvjiJ3HJ+pshvzn/RhjCAqNpGwnLvW19v92++3svf
      fav/SXZ7QwwPD5NKpTh48OC6RRPOxk5u3KoQLe52enzbuLYyct/XbM+v//IDuGz3/vJJQF1p
      CgyDJUsDSBL1ATc/PLwFWFtXZnp6mh07dvDnP/+Z5uZmpqam2Lx5M5OTkwSDQeLxOKFQiIWF
      BWpqasjn88RisUq7xuv1UiwWGRkZoauri6tXr7J///7KWeZxSJLEhQsX2Lt3Ly6Xi3A4TGNj
      I4qiEAyutVd6enoqc+2PHj3KwYMHqaurw+9fm6bc5Gqj3dNFeHXsntuw6fBa+u4v//2OX21p
      hlU5QEm+f93e67Lx/QMPXlv0ebNz5857Pr49MLhxAZAlmW80fZflwtI9q0KqAQP3GLx12+5/
      iZaAuvI0AFl3K//04334PWuzJ0dG1oI2NDSEx+PB6/XS2rq2ntDc3BxOpxOXy0Uymaz8m8/n
      K2feI0eOMDQ0xNTUFHa7vXIL4MrKyhMFwGKxcODAgcrf91rsqb9/7SybyWR47bXX2LRp07oz
      mCRJfD30GvPZGfLaHT1CBnw9u9bz86gUNOrKk8yqXfdsT8mSxE9fH8DjfDG7P+9kVWwb+/sA
      qmzlr1p/TNB2980t2/LgvseZy6k+uPohAS3yAv/9hzvouq3nZ/v27fzoRz+isbERXdfJZDKV
      FddCoRBerxfDMCqLazmdTkKhEDMzM+zduxe32017ezsvvbR2X8GtG3xuv9HnaXG5XHR0dNy1
      5hFAwF7Nt1t+iHzHRLatBeh7QL3/fqq0BG793jetfPdrXRzZudaWm5ub48vUnm91pGy052Jp
      xGw5w/szbxFeHQXAYsBPV8B7d28ewzNFfnv+/gfO5/fz47/7e1o3PV633vOkWCyyuLhIdXV1
      5RbUW27dKXbnspDD8c/4JPIBBjrVZfjb5N1dnre7sw2wbvuSjXFbP/ptodq3tYl/+vE+VIuC
      pmn84he/4I033qBYLLK8vIzT6UTTNBRFoVAoUFVVRSwWo66ujkgkQnd3N+fPn2fPnj2MjY1V
      1vG5fPlypRoaCoVobW39UseuXC5z+vRpGhsbcTgc666suVyOUqm0bgD3uVgYS5WtdHm3YJFV
      FnNROvOl+5690gWdC7Olux6XZJmBnYP88Cd/R/0LsqLDvRiGwbvvvovD4WBqaopwOEx1dTXn
      z59HkiSSySQA09PTLC4ukkqlCAQChJxNeG1+oqvj/FVK42FTn6IpjavRuzsTYK0qBAYZ2Ysk
      S3z7pc3857/ejWpZC8TY2BhTU1Osrq6SSqUYHBzk6tWrDAwM8Lvf/Y5kMlkJQiaTIZ/PMzc3
      x+DgIGfPnmVpaQmfz8elS5eIxWIkk0lSqRRut/uR15K6n+HhYZqamqirq+PXv/416XQaTdM4
      c+YMPp+PYrHIp59+Sjqd5sKFC8/P0oiKbGFv7UG2+Xeiz5yAwgUoZe56ndO6vhqgWCx0bN7M
      K996jebWtmdU2qfHMAzsdjt9fX189tlndHR0VL4o165do6GhAVmW6e3t5ezZs5XuZUmS2Oof
      oEMJYs/8P8glHrKlBwuWI5ScIX78+j5ef2nzuucymQz/8A//wPDwMIVCgUuXLvQd5TwAAAUv
      SURBVAFra5m2tLTg9Xrx+/2Ew2FaW1tZXFyko6OD48eP09vbi67r2O122tvbuXLlCm1tbUSj
      0Uq4v4x8Po/H48Fms7F169pM13g8TiQSqbT9VFWlurqahYWF56MKdBfDAL0MySlIjEM2BoVV
      KOdIlVR+e1XB5/PT0dVFZ1c3Tpfruevnf1KGYXDs2DGKxSK1tbV0dnZy5coVJicnURSlsjpH
      X18fp0+fJplM8sYbb6x/E60Is6dh5gSU7r3yw4OqQBaLhe07dnL4m68RCAZeqGOby+X4+OOP
      6ezsrCx+tbKywuzsbOVG/WKxiMViYWRk5DkNwP0Y+n0Has6fP8/CwgLd3d3rBt1MrZCGhYsQ
      vwapOTC+6BK6MwCyLOMLBNjSt42du/e80NXIx/HMAjA8PEwsFqO/vx9ZltfV9TRNIxqN0tj4
      5KOLH3zwAYcOHeLjjz+ujKKm02kymQwDAwOMjo5W1oR59dVXH+mH4v6i5JOQmoVCEgqrTEaT
      XI5ZqPJ68VRV0djcQu191t3/S/bMAvDhhx8SCKyt1WmxWIjFYmQyGXbt2sX58+epqqqqrB9z
      q6U+OTlZWRH5YY4ePVpZde6TTz5hZWWFbdu24fF4OH/+PB6Ph02bNqFpGrt27Xr6O/wVi0aj
      XLhwoTIwdmdj8dYvQ34ZmqYRDoepqanB5/N9qfd6UTyzXqDJyUmqq6tJp9OsrKzgdrsrSy7u
      37+f2dlZrly5Qk1NDZqmsWfPnsqP3j3KRDGXy0V/fz92u51kMklPTw8TExO4XC4OHz5MLBaj
      vb2dQCDwQv6QxsTEBKFQiKtXr2Kz2YhEIpw7dw63282JEycYHx+nVCpx+fJlCoUCN27cYHp6
      mlgs9sgT7VZWVrh48SLhcBibzcb4+DiqqjI8PEwwGGRsbIxsNks+nycSiVRGrF8EqVSqUvfX
      db0ypvLMeoGCwSCTk5P09/eTzWYryyiqqsqpU6fo7OysLHcXCAQwDANZlivD/g9zay0dVVU5
      ePAgAK2trZWBqldeeeXp7NgzomlaZRR6bm4Ot9vNkSNHePvtt9m3bx9TU1OcOXOGhoYGpqam
      OHz4MCMjI5Vfm3lUMzMzbN68mfn5eS5evMjKygqDg4P88Y9/JBqNVn434Rvf+MZT2tOn4w9/
      +AM2m40tW7bg9/tJJBI4HI5nF4CBgYH7PnfrYN7ZeD18+MvdxPgsRmmflUAgwNzcHPX19bhc
      Lmw2GxaLhcHBQS5duoTP52NgYIB0Ol35jQbgsRYDUxSFAwcOsGXLFt59912qqqrQNI3jx4/T
      0dFBuVymra2tMmP1RZLNZikUCuRyOQqFAtFoFFXdwNmgwoshHA7T0tLyzFfV+6r96le/wm63
      09raisvlwjAMstmsCIBgbhs6GU4QNpoIgGBqIgCCqYkACKYmAiCYmgiAYGoiAIKpiQAIpiYC
      IJiaCIBgaiIAgqmJAAimJgIgmJoIgGBqIgCCqYkACKYmAiCYmgiAYGoiAIKpiQAIpiYCIJia
      CIBgaiIAgqmJAAimJgIgmJoIgGBqIgCCqYkACKYmAiCYmgiAYGoiAIKpiQAIpiYCIJiaCIBg
      aiIAgqmJAAimJgIgmJoIgGBqIgCCqYkACKYmAiCYmgiAYGoiAIKpiQAIpiYCIJiaCIBgaiIA
      gqmJAAimJgIgmJoIgGBqIgCCqYkACKYmAiCYmgiAYGoiAIKpiQAIpiYCIJiaCIBgaiIAgqmJ
      AAimJgIgmJoIgGBqIgCCqYkACKYmAiCYmgiAYGr/H+DWPb33V5TgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      xPIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Stack Bar (After)' width='192'>
      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
      nAJJtvb/AWqd3Sqhrrx8AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Stack Bar (Before)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      fT6tSheSktMI94SsKgs56Ye59sYbWL9mHbryQoL6DMfJWIlXeDxqmQljdQk59Qp85BbG3Xkz
      LoZqNh3KJ+fYQa6eMJFd69fgH+jBkYImegXKyamREhrgjpubG5KuXpiAXm9Arb64HVu9vonY
      hD5k7lpP0va9mN3CcdPlsWrTPu595GFkxhqi+w6lJj+bOx68j5WLFpFT1oi3ykqv0TdRuDeJ
      kjo9mpge5B87gJN3CCMHxtOEExMHhfHFwp/pM3oicYHOyNw1uNJEQGxfvvn8fcaPG9epy8GG
      9gHaxCb0xb25GA8vD8qKTGAyM2BgIhLafmEkkl9/vZzUTsjlLaid1DS1P1HQSe2EQi5HrXZC
      rpdjtZhpaWnFIzCCQHdPavOccHJwQCaT0NpiwsFBgdHYjKmhlJVbDhIf5IDJbEYqsWAwtOJy
      emJWOPuRO66urijkjZ27UP4Cq9duxj0oHHegKOsYzv6hOAO5x/aCcyC71yzBOyac1Su30jM+
      Dkz14B3F5hXLiOyZAIClugCVdzCx3rD3WC5yoBCIiggHUzXpxQBpgDPVW1fQPbY7paVlBAYG
      dNp82VQAZE7uJMTISIgZyq6d+7jq+ols25JMo4sPAwcPoS4lmZR9jVx7/XVs2rSFwPjB+Hm6
      kxBjxUdtxk3pgkd8Ak4yJfHx0bj6OBHppkTmEYdrUBgTRlSTmVPIkBGhxMfHAdCndwJxMWFs
      3LQNtW84nt4+xGk8cHB1JyjID7/u3mxZt5Hx40eQEKMhOqAHmzYl0XPoKDzdnYgNNePh4IEM
      F4pzThKgCbGt7c52EydO6OoSOoXNPCNMq624Yvuiu4JWW42Pb/BFtr1yl70t/hgJXaC1oZyZ
      b81l9pxPaTKfv01hYVHHa0N1ITPfmsvn3/6E6Xd+YleuXHtJdTSW5zJz1ly+WbKWS+nIXfbt
      F8yZ9xGFlfXn/L9N7QSrnRy6uowrxqXuBMubijhcq+bZx+5E0lzPj4t+JLeiichAVxYsWITJ
      KuXll1/B2VdDTHgwDcVHKLAE4duUTqUqBl1+Gr+s3YImMpaTB1P4cekKjDJXnJUSgv09+PqL
      L0kvqCYh2pefl61i/eYd9OzTBwe5lNqiLI4VNxLk6442az+1zgk4lOyg3iOerN1rWbFxF93j
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Table (After)' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Table (Before)' width='192'>
      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
      uQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
